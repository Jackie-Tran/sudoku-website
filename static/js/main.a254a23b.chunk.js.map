{"version":3,"sources":["components/Cell.js","components/Grid.js","App.js","serviceWorker.js","index.js"],"names":["Cell","state","value","changeValue","props","getCellValue","row","col","setState","onChange","e","target","onCellChange","style","cellStyle","type","maxLength","this","Component","width","padding","textAlign","Grid","updateCells","console","log","i","cells","length","cellId","className","ref","cell","App","grid","newGrid","parseInt","checkSudoku","sudoku","numbersCheck","j","Math","abs","startRow","startCol","isSolved","box","floor","findEmpty","tryValue","num","solveSudoku","depth","possibleNumbers","emptyPosition","displaySudoku","children","onClick","current","React","createRef","href","id","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a254a23b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Cell extends Component {\r\n\r\n    state = {\r\n        value: \"0\"\r\n    }\r\n\r\n    changeValue = () => {\r\n        // Parent call back function\r\n        const value = this.props.getCellValue(this.props.row, this.props.col);\r\n        this.setState({\r\n            value\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            value: e.target.value\r\n        });\r\n        const { row, col } = this.props;\r\n        this.props.onCellChange(row, col, e.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input style={cellStyle} type=\"text\" maxLength=\"1\" value={this.state.value} onChange={this.onChange} ></input>\r\n        )\r\n    }\r\n}\r\n\r\nconst cellStyle = {\r\n    width: \"5%\",\r\n    padding: \"1.5% 0\",\r\n    \r\n    textAlign: 'center',\r\n}\r\n\r\nexport default Cell\r\n","import React, { Component } from 'react';\r\nimport Cell from './Cell';\r\nimport './Grid.css';\r\n\r\nexport class Grid extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.cells = [];\r\n        this.cellId = 0;\r\n    }\r\n\r\n    updateCells = () => {\r\n        console.log(\"updating cells\");\r\n        for (var i = 0; i < this.cells.length; i++) {\r\n            this.cells[i].changeValue();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <Cell ref={(cell) => { this.cells[0] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={0} col={0} />\r\n                            <Cell ref={(cell) => { this.cells[1] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={0} col={1} />\r\n                            <Cell ref={(cell) => { this.cells[2] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={0} col={2} />\r\n                            <Cell ref={(cell) => { this.cells[3] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={0} col={3} />\r\n                            <Cell ref={(cell) => { this.cells[4] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={0} col={4} />\r\n                            <Cell ref={(cell) => { this.cells[5] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={0} col={5} />\r\n                            <Cell ref={(cell) => { this.cells[6] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={0} col={6} />\r\n                            <Cell ref={(cell) => { this.cells[7] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={0} col={7} />\r\n                            <Cell ref={(cell) => { this.cells[8] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={0} col={8} />\r\n                        </tr>\r\n                        <tr>\r\n                            <Cell ref={(cell) => { this.cells[9] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={1} col={0} />\r\n                            <Cell ref={(cell) => { this.cells[10] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={1} col={1} />\r\n                            <Cell ref={(cell) => { this.cells[11] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={1} col={2} />\r\n                            <Cell ref={(cell) => { this.cells[12] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={1} col={3} />\r\n                            <Cell ref={(cell) => { this.cells[13] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={1} col={4} />\r\n                            <Cell ref={(cell) => { this.cells[14] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={1} col={5} />\r\n                            <Cell ref={(cell) => { this.cells[15] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={1} col={6} />\r\n                            <Cell ref={(cell) => { this.cells[16] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={1} col={7} />\r\n                            <Cell ref={(cell) => { this.cells[17] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={1} col={8} />\r\n                        </tr>\r\n                        <tr>\r\n                            <Cell ref={(cell) => { this.cells[18] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={2} col={0} />\r\n                            <Cell ref={(cell) => { this.cells[19] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={2} col={1} />\r\n                            <Cell ref={(cell) => { this.cells[20] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={2} col={2} />\r\n                            <Cell ref={(cell) => { this.cells[21] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={2} col={3} />\r\n                            <Cell ref={(cell) => { this.cells[22] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={2} col={4} />\r\n                            <Cell ref={(cell) => { this.cells[23] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={2} col={5} />\r\n                            <Cell ref={(cell) => { this.cells[24] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={2} col={6} />\r\n                            <Cell ref={(cell) => { this.cells[25] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={2} col={7} />\r\n                            <Cell ref={(cell) => { this.cells[26] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={2} col={8} />\r\n                        </tr>\r\n                        <tr>\r\n                            <Cell ref={(cell) => { this.cells[27] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={3} col={0} />\r\n                            <Cell ref={(cell) => { this.cells[28] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={3} col={1} />\r\n                            <Cell ref={(cell) => { this.cells[29] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={3} col={2} />\r\n                            <Cell ref={(cell) => { this.cells[30] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={3} col={3} />\r\n                            <Cell ref={(cell) => { this.cells[31] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={3} col={4} />\r\n                            <Cell ref={(cell) => { this.cells[32] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={3} col={5} />\r\n                            <Cell ref={(cell) => { this.cells[33] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={3} col={6} />\r\n                            <Cell ref={(cell) => { this.cells[34] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={3} col={7} />\r\n                            <Cell ref={(cell) => { this.cells[35] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={3} col={8} />\r\n                        </tr>\r\n                        <tr>\r\n                            <Cell ref={(cell) => { this.cells[36] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={4} col={0} />\r\n                            <Cell ref={(cell) => { this.cells[37] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={4} col={1} />\r\n                            <Cell ref={(cell) => { this.cells[38] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={4} col={2} />\r\n                            <Cell ref={(cell) => { this.cells[39] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={4} col={3} />\r\n                            <Cell ref={(cell) => { this.cells[40] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={4} col={4} />\r\n                            <Cell ref={(cell) => { this.cells[41] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={4} col={5} />\r\n                            <Cell ref={(cell) => { this.cells[42] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={4} col={6} />\r\n                            <Cell ref={(cell) => { this.cells[43] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={4} col={7} />\r\n                            <Cell ref={(cell) => { this.cells[44] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={4} col={8} />\r\n                        </tr>\r\n                        <tr>\r\n                            <Cell ref={(cell) => { this.cells[45] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={5} col={0} />\r\n                            <Cell ref={(cell) => { this.cells[46] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={5} col={1} />\r\n                            <Cell ref={(cell) => { this.cells[47] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={5} col={2} />\r\n                            <Cell ref={(cell) => { this.cells[48] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={5} col={3} />\r\n                            <Cell ref={(cell) => { this.cells[49] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={5} col={4} />\r\n                            <Cell ref={(cell) => { this.cells[50] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={5} col={5} />\r\n                            <Cell ref={(cell) => { this.cells[51] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={5} col={6} />\r\n                            <Cell ref={(cell) => { this.cells[52] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={5} col={7} />\r\n                            <Cell ref={(cell) => { this.cells[53] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={5} col={8} />\r\n                        </tr>\r\n                        <tr>\r\n                            <Cell ref={(cell) => { this.cells[54] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={6} col={0} />\r\n                            <Cell ref={(cell) => { this.cells[55] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={6} col={1} />\r\n                            <Cell ref={(cell) => { this.cells[56] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={6} col={2} />\r\n                            <Cell ref={(cell) => { this.cells[57] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={6} col={3} />\r\n                            <Cell ref={(cell) => { this.cells[58] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={6} col={4} />\r\n                            <Cell ref={(cell) => { this.cells[59] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={6} col={5} />\r\n                            <Cell ref={(cell) => { this.cells[60] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={6} col={6} />\r\n                            <Cell ref={(cell) => { this.cells[61] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={6} col={7} />\r\n                            <Cell ref={(cell) => { this.cells[62] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={6} col={8} />\r\n                        </tr>\r\n                        <tr>\r\n                            <Cell ref={(cell) => { this.cells[63] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={7} col={0} />\r\n                            <Cell ref={(cell) => { this.cells[64] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={7} col={1} />\r\n                            <Cell ref={(cell) => { this.cells[65] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={7} col={2} />\r\n                            <Cell ref={(cell) => { this.cells[66] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={7} col={3} />\r\n                            <Cell ref={(cell) => { this.cells[67] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={7} col={4} />\r\n                            <Cell ref={(cell) => { this.cells[68] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={7} col={5} />\r\n                            <Cell ref={(cell) => { this.cells[69] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={7} col={6} />\r\n                            <Cell ref={(cell) => { this.cells[70] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={7} col={7} />\r\n                            <Cell ref={(cell) => { this.cells[71] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={7} col={8} />\r\n                        </tr>\r\n                        <tr>\r\n                            <Cell ref={(cell) => { this.cells[72] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={8} col={0} />\r\n                            <Cell ref={(cell) => { this.cells[73] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={8} col={1} />\r\n                            <Cell ref={(cell) => { this.cells[74] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={8} col={2} />\r\n                            <Cell ref={(cell) => { this.cells[75] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={8} col={3} />\r\n                            <Cell ref={(cell) => { this.cells[76] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={8} col={4} />\r\n                            <Cell ref={(cell) => { this.cells[77] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={8} col={5} />\r\n                            <Cell ref={(cell) => { this.cells[78] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={8} col={6} />\r\n                            <Cell ref={(cell) => { this.cells[79] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={8} col={7} />\r\n                            <Cell ref={(cell) => { this.cells[80] = cell }} onCellChange={this.props.onCellChange} getCellValue={this.props.getCellValue} row={8} col={8} />\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Grid\r\n","import React from 'react';\nimport Grid from './components/Grid';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.grid = React.createRef();\n  }\n\n  state = {\n    // grid: [\n    //   [5, 3, 0, 0, 7, 0, 0, 0, 0],\n    //   [6, 0, 0, 1, 9, 5, 0, 0, 0],\n    //   [0, 9, 8, 0, 0, 0, 0, 6, 0],\n    //   [8, 0, 0, 0, 6, 0, 0, 0, 3],\n    //   [4, 0, 0, 8, 0, 3, 0, 0, 1],\n    //   [7, 0, 0, 0, 2, 0, 0, 0, 6],\n    //   [0, 6, 0, 0, 0, 0, 2, 8, 0],\n    //   [0, 0, 0, 4, 1, 9, 0, 0, 5],\n    //   [0, 0, 0, 0, 8, 0, 0, 7, 9]\n    // ]\n    grid: [\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    ]\n  }\n\n  onCellChange = (row, col, value) => {\n    // Change the grid in state\n    const newGrid = this.state.grid;\n    newGrid[row][col] = parseInt(value);\n    this.setState({ grid: newGrid });\n  }\n\n  checkSudoku = (sudoku, row, col) => {\n    // Check the row\n    let numbersCheck = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    for (let j = 0; j < 9; j++) {\n      if (sudoku.grid[row][j] !== 0 && numbersCheck[Math.abs(sudoku.grid[row][j])] === 1) {\n        // Already saw this number in this row\n        return false;\n      } else {\n        numbersCheck[sudoku.grid[row][j]] = 1;\n      }\n    }\n\n    // Check the col\n    numbersCheck = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    for (let i = 0; i < 9; i++) {\n      if (sudoku.grid[i][col] !== 0 && numbersCheck[Math.abs(sudoku.grid[i][col])] === 1) {\n        // Already saw this number in this col\n        return false;\n      } else {\n        numbersCheck[sudoku.grid[i][col]] = 1;\n      }\n    }\n\n    // Check the box\n    numbersCheck = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let startRow = row - row % 3;\n    let startCol = col - col % 3;\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (sudoku.grid[startRow + i][startCol + j] !== 0 && numbersCheck[sudoku.grid[startRow + i][startCol + j]] === 1) {\n          // Already saw this number in this box\n          return false;\n        } else {\n          numbersCheck[sudoku.grid[startRow + i][startCol + j]] = 1;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  isSolved = (sudoku) => {\n    // Check rows\n    for (let i = 0; i < 9; i++) {\n      let numbersCheck = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n      for (let j = 0; j < 9; j++) {\n        if (numbersCheck[sudoku.grid[i][j]] === 1) {\n          // We already saw this number\n          return false;\n        } else {\n          numbersCheck[sudoku.grid[i][j]] = 1;\n        }\n      }\n    }\n\n    // Check cols\n    for (let j = 0; j < 9; j++) {\n      let numbersCheck = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n      for (let i = 0; i < 9; i++) {\n        if (numbersCheck[sudoku.grid[i][j]] === 1) {\n          // We already saw this number\n          return false;\n        } else {\n          numbersCheck[sudoku.grid[i][j]] = 1;\n        }\n      }\n    }\n\n    // Check box\n    for (let box = 0; box < 9; box++) {\n      let numbersCheck = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n      for (let i = 3 * Math.floor(box / 3); i < 3 * Math.floor(box / 3) + 3; i++) {\n        for (let j = 3 * (box % 3); j < 3 * (box % 3) + 3; j++) {\n          if (numbersCheck[sudoku.grid[i][j]] === 1) {\n            // We already saw this number\n            return false;\n          } else {\n            numbersCheck[sudoku.grid[i][j]] = 1;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  findEmpty = (sudoku, row, col) => {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (sudoku.grid[i][j] <= 0) {\n          row = i;\n          col = j;\n          return { row, col }\n        }\n      }\n    }\n\n    row = -1;\n    col = -1;\n    return { row, col };\n  }\n\n  tryValue = (sudoku, num, row, col) => {\n    sudoku.grid[row][col] = num;\n    return this.checkSudoku(sudoku, row, col);\n  }\n\n  solveSudoku = (sudoku, depth = 0) => {\n    // Numbers we will try putting in place of empties\n    let possibleNumbers = [8, 2, 4, 1, 9, 6, 5, 7, 3];\n    let row = 0;\n    let col = 0;\n\n    // Find empty square we wanmt to fill\n    let emptyPosition = this.findEmpty(sudoku, row, col);\n    row = emptyPosition.row;\n    col = emptyPosition.col;\n\n    if (row === -1 && col === -1) {\n      return;\n    }\n\n    // Try all possible values\n    for (let i = 0; i < possibleNumbers.length; i++) {\n      let num = possibleNumbers[i];\n      // console.log(num);\n      // Check if putting this number is safe\n      if (this.tryValue(sudoku, num, row, col)) {\n        this.solveSudoku(sudoku, depth + 1);\n        if (this.isSolved(sudoku)) {\n          return;\n        }\n      }\n    }\n\n    sudoku.grid[row][col] = 0;\n\n  }\n\n  displaySudoku = () => {\n    console.log(this.props.children);\n  }\n\n  onClick = (e) => {\n    let sudoku = this.state;\n    this.solveSudoku(sudoku);\n    console.log(\"Solution is: \");\n    console.log(sudoku.grid);\n    // Change the value of the cells\n    this.grid.current.updateCells();\n  }\n\n  \n  getCellValue = (row, col) => {\n    return this.state.grid[row][col];\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Sudoku Solver</h1>\n          <h4>Backtracking Algorthim</h4>\n          <a href=\"#solver\">\n            <div className=\"btn btn-one\">\n              <span>TRY NOW</span>\n            </div>\n          </a>\n\n        </header>\n\n        {/* Section Break */}\n\n        <div className=\"solverContainer\" id='solver'>\n          <h2>Input data in the grid below.</h2>\n          <Grid ref={this.grid} sudoku={this.state.grid} onCellChange={this.onCellChange} getCellValue={this.getCellValue}/>\n          <a onClick={this.onClick}>\n            <div className=\"btn btn-five\">\n              <span>SOLVE</span>\n            </div>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}